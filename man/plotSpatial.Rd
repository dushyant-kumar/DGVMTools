% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotSpatial.R
\name{plotSpatial}
\alias{plotSpatial}
\title{Plot maps from a \code{Field} and a lists of \code{Field}.}
\usage{
plotSpatial(sources, layers = NULL, title = character(0),
  subtitle = character(0), facet.labels = NULL, facet.order = NULL,
  plot.bg.col = "white", panel.bg.col = "#809DB8",
  useLongNames = FALSE, text.multiplier = NULL, xlim = NULL,
  ylim = NULL, years = NULL, days = NULL, months = NULL,
  seasons = NULL, limits = NULL, cols = NULL, cuts = NULL,
  drop.cuts = TRUE, map.overlay = NULL, grid = FALSE, plot = TRUE,
  interior.lines = TRUE)
}
\arguments{
\item{sources}{The data to plot. Can be a Field, a DataObject, or a list of including both}

\item{layers}{A list of strings specifying which layers to plot.  Defaults to all layers.}

\item{title}{A character string to override the default title.  Set to NULL for no title.}

\item{subtitle}{A character string to override the default subtitle. Set to NULL for no subtitle.
Note that using these, especially "worldHires", can add quite a bit of time.}

\item{facet.labels}{List of character strings to be used as panel labels for summary plots and titles for the individual plots.
Sensible titles will be constructed if this is not specified.}

\item{facet.order}{A vector of the characters that, if supplied, control the order of the facets.  To see what these values are you can call this funtion with "plot=FALSE"
and check the values of the Facet column.  But generally they will be the values of the @names slots of the Data/Fields and/or the layers (as layers plotted as defined by the layers arguments 
in this function).}

\item{plot.bg.col}{Colour string for the plot background.  "white"}

\item{panel.bg.col}{Colour string for the panel background, default it a sort of sky blue.}

\item{useLongNames}{Boolean, if TRUE replace PFT IDs with the PFT's full names on the plots. NOT CURRENTLY IMPLEMENTED!!}

\item{text.multiplier}{A number specifying an overall multiplier for the text on the plot.
Make it bigger if the text is too small on large plots and vice-versa.}

\item{xlim}{An optional vector of two numerics to specify the x/longitude range of the plot.}

\item{ylim}{An optional vector of two numerics to specify the y/latitude range of the plot.}

\item{years}{An optional numeric vector specifying which years to plot (take care, this defaults to all the years in the input Fields which can be a lot!)}

\item{days}{An optional numeric vector specifying which days to plot (take care, this defaults to all the days in the input Fields which can be a lot!)}

\item{months}{An optional numeric vector specifying which months to plot(defaults to all the days in the input Fields)}

\item{seasons}{An optional character vector specifying which seasons to plot (any or all of "DJF", "MAM, "JJA", "SON", defaults to all the seasons in the input Fields)}

\item{limits}{A numeric vector with two members (lower and upper limit) to limit the plotted values.}

\item{cols}{A colour palette function to override the defaults.}

\item{cuts}{Cut ranges (a numeric vector) to override the default colour delimitation,  discretise the data into discrete colour bands}

\item{drop.cuts}{Logical, if TRUE then drop cut at each end which do not have any data in them in order more to fully use the colour scale.
Default is TRUE.  Ignored if 'cuts' argument is not used.}

\item{map.overlay}{A character string specifying which map overlay (from the maps and mapdata packages) should be overlain.}

\item{grid}{Boolean, if TRUE then don't use facet_grid() to order the panels in a grid.  Instead use facet_wrap().
Useful when not all combinations of Sources x Layers exist which would leave blank panels.}

\item{plot}{Boolean, if FALSE return a data.table with the final data instead of the ggplot object.  This can be useful for inspecting the structure of the facetting columns, amongst other things.}

\item{interior.lines}{Boolean, if TRUE plot country lines with the continent outlines of the the requested map.overlay
Other things can be overlain on the resulting plot with further ggplot2 commands.}
}
\value{
Returns a ggplot object
}
\description{
This is a heavy lifting function for plotting maps from Fields, DataObjects, and Comparisons (and lists of those things) with flexibility, but also with a high degree of automation. 
As a consequence, it has a really large amount of parameters for a huge amount of flexibility.  However they are all set to sensible defaults.  In principle you can supply only the objext and it will plot.
It is basically a complex wrapper for the ggplot2 function geom_raster() and it returns a ggplot object, which will need to be displayed using a \code{print()} command.  Note that this object can be firther modified 
using further ggplot2 commands.
}
\details{
This function is heavily used by the benchmarking functions and can be very useful to the user for making quick plots
in standard benchmarking and post-processing.  It is also highly customisable for final results plots for papers and so on.
However, the \code{plotGGSpatial} function makes pretty plots with a simpler syntax, but with less flexibility.

The function works best for \code{Fields} (which contain a lot of useful metadata).
}
\seealso{
\code{plotTemporal}
}
\author{
Matthew Forrest \email{matthew.forrest@senckenberg.de}
}
